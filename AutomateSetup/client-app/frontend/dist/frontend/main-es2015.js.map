{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/pages/dairy/dairy.component.html","./src/app/pages/index/index.component.html","./src/app/pages/seafood/seafood.component.html","./node_modules/tslib/tslib.es6.js","./src/app/api.service.ts","./src/app/app-routing.module.ts","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/material.module.ts","./src/app/pages/dairy/dairy.component.css","./src/app/pages/dairy/dairy.component.ts","./src/app/pages/index/index.component.css","./src/app/pages/index/index.component.ts","./src/app/pages/seafood/seafood.component.css","./src/app/pages/seafood/seafood.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"<h1>{{ title }}</h1>\\r\\n<div>\\r\\n  <router-outlet></router-outlet>\\r\\n</div>\\r\\n\"","export default \"<p>dairy works!</p>\\n\"","export default \"<div class=\\\"subtitle\\\"><h2>Choose the supply chain you want</h2></div>\\n<div class=\\\"main\\\">\\n  <button mat-button class=\\\"to-seafood\\\" (click)=\\\"toSeafood()\\\">Seafood</button>\\n  <button mat-button class=\\\"to-dairy\\\" (click)=\\\"toDairy()\\\">Dairy</button>\\n</div>\\n\"","export default \"<div class=\\\"head-box\\\">\\n  <h1>{{ title }}</h1>\\n  <h2>\\n    Using this user interface, you can interact with the Seafood supply chain.\\n    Check the <a href=\\\"https://github.com/ghareeb-falazi/SCIP-CaseStudy-2\\\">sample case study</a> for more detailes about what is involved.\\n  </h2>\\n</div>\\n\\n<mat-tab-group mat-stretch-tabs (selectedTabChange)=\\\"onTabClick($event)\\\">\\n  <!-- FISH -->\\n  <mat-tab label=\\\"Fisherman\\\">\\n    <h2>\\n      You can register a new captured fish by filling the form and clicking on\\n      the <em>Register Fish</em> button.\\n    </h2>\\n    <div class=\\\"wrapper\\\">\\n      <mat-card class=\\\"form-card\\\">\\n        <mat-card-header>\\n          <mat-card-title>Fill the form with all information about the captured fish</mat-card-title>\\n        </mat-card-header>\\n        <mat-card-content class=\\\"form-box\\\">\\n          <form\\n          [formGroup]=\\\"fishForm\\\"\\n          (ngSubmit)=\\\"onRegisterFish(fishForm.value)\\\"\\n        >\\n          <mat-form-field>\\n            <input matInput formControlName=\\\"fishId\\\" placeholder=\\\"Fish id..\\\" />\\n          </mat-form-field>\\n          <mat-form-field>\\n            <input\\n              matInput\\n              formControlName=\\\"location\\\"\\n              placeholder=\\\"Location..\\\"\\n            />\\n          </mat-form-field>\\n          <mat-form-field>\\n            <input\\n              matInput\\n              formControlName=\\\"fishermanName\\\"\\n              placeholder=\\\"Fisherman name..\\\"\\n            />\\n          </mat-form-field>\\n          <button class=\\\"button\\\" type=\\\"submit\\\">Register Fish</button>\\n        </form>\\n        <div class=\\\"result-box\\\">\\n          <div *ngIf=\\\"performing\\\" class=\\\"lds-roller mt-4\\\">\\n            <div></div>\\n            <div></div>\\n            <div></div>\\n            <div></div>\\n            <div></div>\\n            <div></div>\\n            <div></div>\\n            <div></div>\\n          </div>\\n          <div *ngIf=\\\"!performing\\\" class=\\\"mt-4\\\">\\n            {{ result }}\\n          </div>\\n        </div>\\n        </mat-card-content>\\n      </mat-card>\\n      <div class=\\\"query-box\\\">\\n        <mat-card>\\n          <mat-card-header>\\n            <mat-card-title>Registered Fishes</mat-card-title>\\n          </mat-card-header>\\n          <mat-card-content>\\n            <div *ngIf=\\\"fishPerforming\\\" class=\\\"lds-roller\\\">\\n              <div></div>\\n              <div></div>\\n              <div></div>\\n              <div></div>\\n              <div></div>\\n              <div></div>\\n              <div></div>\\n              <div></div>\\n            </div>\\n            <table\\n              *ngIf=\\\"!fishPerforming\\\"\\n              mat-table\\n              [dataSource]=\\\"fishes\\\"\\n              class=\\\"mat-elevation-z8\\\"\\n            >\\n              <ng-container matColumnDef=\\\"fishId\\\">\\n                <th mat-header-cell *matHeaderCellDef>Fish Id</th>\\n                <td mat-cell *matCellDef=\\\"let element\\\">{{ element.fishId }}</td>\\n              </ng-container>\\n              <ng-container matColumnDef=\\\"location\\\">\\n                <th mat-header-cell *matHeaderCellDef>Location</th>\\n                <td mat-cell *matCellDef=\\\"let element\\\">{{ element.location }}</td>\\n              </ng-container>\\n              <ng-container matColumnDef=\\\"fishermanName\\\">\\n                <th mat-header-cell *matHeaderCellDef>Fisherman Name</th>\\n                <td mat-cell *matCellDef=\\\"let element\\\">\\n                  {{ element.fishermanName }}\\n                </td>\\n              </ng-container>\\n              <tr mat-header-row *matHeaderRowDef=\\\"fishColumns\\\"></tr>\\n              <tr mat-row *matRowDef=\\\"let row; columns: fishColumns\\\"></tr>\\n            </table>\\n            <div *ngIf=\\\"fishError !== ''\\\" class=\\\"error-box\\\">\\n              {{ fishError }}\\n            </div>\\n          </mat-card-content>\\n        </mat-card>\\n      </div>\\n    </div>\\n  </mat-tab>\\n\\n  <!-- SHIPMENT -->\\n  <mat-tab label=\\\"Shipment Company\\\">\\n    <h2>\\n      You can register a new shipment of fishes by filling the form and clicking\\n      on the <em>Register Shipment</em> button.\\n    </h2>\\n    <div class=\\\"wrapper\\\">\\n      <mat-card class=\\\"form-card\\\">\\n        <mat-card-header>\\n          <mat-card-title>Fill the form with all information about the shipment</mat-card-title>\\n        </mat-card-header>\\n        <mat-card-content class=\\\"form-box\\\">\\n          <form\\n          [formGroup]=\\\"shipmentForm\\\"\\n          (ngSubmit)=\\\"onRegisterShipment(shipmentForm.value)\\\"\\n        >\\n          <mat-form-field>\\n            <mat-chip-list\\n              #shipmentFishIds\\n              formArrayName=\\\"fishIds\\\"\\n              aria-label=\\\"Ids selection\\\"\\n            >\\n              <mat-chip\\n                *ngFor=\\\"let id of shipmentForm.controls.fishIds.value\\\"\\n                [selectable]=\\\"selectable\\\"\\n                [removable]=\\\"removable\\\"\\n                (removed)=\\\"removeIdFromShipment(id)\\\"\\n              >\\n                {{ id }}\\n                <mat-icon matChipRemove *ngIf=\\\"removable\\\">cancel</mat-icon>\\n              </mat-chip>\\n              <input\\n                placeholder=\\\"Fish ids..\\\"\\n                [matChipInputFor]=\\\"shipmentFishIds\\\"\\n                [matChipInputSeparatorKeyCodes]=\\\"separatorKeysCodes\\\"\\n                [matChipInputAddOnBlur]=\\\"addOnBlur\\\"\\n                (matChipInputTokenEnd)=\\\"addIdInShipment($event)\\\"\\n              />\\n            </mat-chip-list>\\n          </mat-form-field>\\n          <mat-form-field>\\n            <input\\n              matInput\\n              formControlName=\\\"toLocation\\\"\\n              placeholder=\\\"To location..\\\"\\n            />\\n          </mat-form-field>\\n          <mat-form-field>\\n            <input\\n              matInput\\n              formControlName=\\\"shipmentCompanyName\\\"\\n              placeholder=\\\"Company name..\\\"\\n            />\\n          </mat-form-field>\\n          <button class=\\\"button\\\" type=\\\"submit\\\">Register Shipment</button>\\n        </form>\\n        <div class=\\\"result-box\\\">\\n          <div *ngIf=\\\"performing\\\" class=\\\"lds-roller mt-4\\\">\\n            <div></div>\\n            <div></div>\\n            <div></div>\\n            <div></div>\\n            <div></div>\\n            <div></div>\\n            <div></div>\\n            <div></div>\\n          </div>\\n          <div *ngIf=\\\"!performing\\\" class=\\\"mt-4\\\">\\n            {{ result }}\\n          </div>\\n        </div>\\n        </mat-card-content>\\n      </mat-card>\\n      <div class=\\\"query-box\\\">\\n        <!-- SHIPMENTS -->\\n        <mat-card>\\n          <mat-card-header>\\n            <mat-card-title>Registered Fish Shipments</mat-card-title>\\n          </mat-card-header>\\n          <mat-card-content>\\n            <div *ngIf=\\\"shipmentPerforming\\\" class=\\\"lds-roller\\\">\\n              <div></div>\\n              <div></div>\\n              <div></div>\\n              <div></div>\\n              <div></div>\\n              <div></div>\\n              <div></div>\\n              <div></div>\\n            </div>\\n            <table\\n              *ngIf=\\\"!shipmentPerforming\\\"\\n              mat-table\\n              [dataSource]=\\\"shipments\\\"\\n              class=\\\"mat-elevation-z8\\\"\\n            >\\n              <ng-container matColumnDef=\\\"fishIds\\\">\\n                <th mat-header-cell *matHeaderCellDef>Fish Ids</th>\\n                <td mat-cell *matCellDef=\\\"let element\\\">{{ element.fishIds }}</td>\\n              </ng-container>\\n              <ng-container matColumnDef=\\\"toLocation\\\">\\n                <th mat-header-cell *matHeaderCellDef>To Location</th>\\n                <td mat-cell *matCellDef=\\\"let element\\\">\\n                  {{ element.toLocation }}\\n                </td>\\n              </ng-container>\\n              <ng-container matColumnDef=\\\"shipmentCompanyName\\\">\\n                <th mat-header-cell *matHeaderCellDef>\\n                  Shipment Company Name\\n                </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\">\\n                  {{ element.shipmentCompanyName }}\\n                </td>\\n              </ng-container>\\n              <tr mat-header-row *matHeaderRowDef=\\\"shipmentColumns\\\"></tr>\\n              <tr mat-row *matRowDef=\\\"let row; columns: shipmentColumns\\\"></tr>\\n            </table>\\n            <div *ngIf=\\\"shipmentError !== ''\\\" class=\\\"error-box\\\">\\n              {{ shipmentError }}\\n            </div>\\n          </mat-card-content> \\n        </mat-card>\\n      </div>\\n    </div>\\n  </mat-tab>\\n\\n  <!-- PACKAGE -->\\n  <mat-tab label=\\\"Processing Facility\\\">\\n    <h2>\\n      You can register a new fishes' package by filling the form and clicking on\\n      the <em>Register Package</em> button.\\n    </h2>\\n    <div class=\\\"wrapper\\\">\\n      <mat-card class=\\\"form-card\\\">\\n        <mat-card-header>\\n          <mat-card-title>Fill the form with all information about the shipment</mat-card-title>\\n        </mat-card-header>\\n        <mat-card-content class=\\\"form-box\\\">\\n          <form\\n          [formGroup]=\\\"packageForm\\\"\\n          (ngSubmit)=\\\"onRegisterPackage(packageForm.value)\\\">\\n            <mat-form-field>\\n              <mat-chip-list\\n                #packageFishIds\\n                formArrayName=\\\"fishIds\\\"\\n                aria-label=\\\"Ids selection\\\"\\n              >\\n                <mat-chip\\n                  *ngFor=\\\"let id of packageForm.controls.fishIds.value\\\"\\n                  [selectable]=\\\"selectable\\\"\\n                  [removable]=\\\"removable\\\"\\n                  (removed)=\\\"removeIdFromPackage(id)\\\"\\n                >\\n                  {{ id }}\\n                  <mat-icon matChipRemove *ngIf=\\\"removable\\\">cancel</mat-icon>\\n                </mat-chip>\\n                <input\\n                  placeholder=\\\"Fish ids..\\\"\\n                  [matChipInputFor]=\\\"packageFishIds\\\"\\n                  [matChipInputSeparatorKeyCodes]=\\\"separatorKeysCodes\\\"\\n                  [matChipInputAddOnBlur]=\\\"addOnBlur\\\"\\n                  (matChipInputTokenEnd)=\\\"addIdInPackage($event)\\\"\\n                />\\n              </mat-chip-list>\\n            </mat-form-field>\\n            <mat-form-field>\\n              <input\\n                matInput\\n                formControlName=\\\"packageId\\\"\\n                placeholder=\\\"Package id..\\\"\\n              />\\n            </mat-form-field>\\n            <mat-form-field>\\n              <input\\n                matInput\\n                formControlName=\\\"processingFacilityName\\\"\\n                placeholder=\\\"Facility name..\\\"\\n              />\\n            </mat-form-field>\\n            <button class=\\\"button\\\" type=\\\"submit\\\">Register Package</button>\\n          </form>\\n          <div class=\\\"result-box\\\">\\n            <div *ngIf=\\\"performing\\\" class=\\\"lds-roller mt-4\\\">\\n              <div></div>\\n              <div></div>\\n              <div></div>\\n              <div></div>\\n              <div></div>\\n              <div></div>\\n              <div></div>\\n              <div></div>\\n            </div>\\n            <div *ngIf=\\\"!performing\\\" class=\\\"mt-4\\\">\\n              {{ result }}\\n            </div>\\n          </div>\\n        </mat-card-content>\\n      </mat-card>\\n      <div class=\\\"query-box\\\">\\n        <!-- PACKAGE -->\\n        <mat-card>\\n          <mat-card-header>\\n            <mat-card-title>Registered Packages</mat-card-title>\\n          </mat-card-header>\\n          <mat-card-content>\\n            <div *ngIf=\\\"packagePerforming\\\" class=\\\"lds-roller\\\">\\n              <div></div>\\n              <div></div>\\n              <div></div>\\n              <div></div>\\n              <div></div>\\n              <div></div>\\n              <div></div>\\n              <div></div>\\n            </div>\\n            <table\\n              *ngIf=\\\"!packagePerforming\\\"\\n              mat-table\\n              [dataSource]=\\\"packages\\\"\\n              class=\\\"mat-elevation-z8\\\"\\n            >\\n              <ng-container matColumnDef=\\\"fishIds\\\">\\n                <th mat-header-cell *matHeaderCellDef>Fish Ids</th>\\n                <td mat-cell *matCellDef=\\\"let element\\\">{{ element.fishIds }}</td>\\n              </ng-container>\\n              <ng-container matColumnDef=\\\"packageId\\\">\\n                <th mat-header-cell *matHeaderCellDef>Package Id</th>\\n                <td mat-cell *matCellDef=\\\"let element\\\">\\n                  {{ element.packageId }}\\n                </td>\\n              </ng-container>\\n              <ng-container matColumnDef=\\\"processingFacilityName\\\">\\n                <th mat-header-cell *matHeaderCellDef>\\n                  Processing Facility Name\\n                </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\">\\n                  {{ element.processingFacilityName }}\\n                </td>\\n              </ng-container>\\n              <tr mat-header-row *matHeaderRowDef=\\\"packageColumns\\\"></tr>\\n              <tr mat-row *matRowDef=\\\"let row; columns: packageColumns\\\"></tr>\\n            </table>\\n            <div *ngIf=\\\"packageError !== ''\\\" class=\\\"error-box\\\">\\n              {{ packageError }}\\n            </div>\\n          </mat-card-content>\\n        </mat-card>\\n      </div>  \\n    </div>\\n  </mat-tab>\\n\\n  <!-- TRANSPORTATION -->\\n  <mat-tab label=\\\"Distributor\\\">\\n    <h2>\\n      You can register a transportation by filling the form and clicking on the\\n      <em>Register Transportation</em> button.\\n    </h2>\\n    <div class=\\\"wrapper\\\">\\n      <mat-card class=\\\"form-card\\\">\\n        <mat-card-header>\\n          <mat-card-title>Fill the form with all information about the shipment</mat-card-title>\\n        </mat-card-header>\\n        <mat-card-content class=\\\"form-box\\\">\\n          <form\\n          [formGroup]=\\\"transportationForm\\\"\\n          (ngSubmit)=\\\"onRegisterTransportation(transportationForm.value)\\\">\\n            <mat-form-field>\\n              <input\\n                matInput\\n                formControlName=\\\"packageId\\\"\\n                placeholder=\\\"Package id..\\\"\\n              />\\n            </mat-form-field>\\n            <mat-form-field>\\n              <input\\n                matInput\\n                formControlName=\\\"toLocation\\\"\\n                placeholder=\\\"To location..\\\"\\n              />\\n            </mat-form-field>\\n            <mat-form-field>\\n              <input\\n                matInput\\n                formControlName=\\\"distributorName\\\"\\n                placeholder=\\\"Distributor name..\\\"\\n              />\\n            </mat-form-field>\\n            <button class=\\\"button\\\" type=\\\"submit\\\">Register Transportation</button>\\n          </form>\\n          <div class=\\\"result-box\\\">\\n            <div *ngIf=\\\"performing\\\" class=\\\"lds-roller mt-4\\\">\\n              <div></div>\\n              <div></div>\\n              <div></div>\\n              <div></div>\\n              <div></div>\\n              <div></div>\\n              <div></div>\\n              <div></div>\\n            </div>\\n            <div *ngIf=\\\"!performing\\\" class=\\\"mt-4\\\">\\n              {{ result }}\\n            </div>\\n          </div>\\n        </mat-card-content>\\n      </mat-card>\\n      <div class=\\\"query-box\\\">\\n        <!-- TRANSPORTATION -->\\n        <mat-card>\\n          <mat-card-header>\\n            <mat-card-title>Registered Package Transportations</mat-card-title>\\n          </mat-card-header>\\n          <mat-card-content>\\n            <div *ngIf=\\\"transportationPerforming\\\" class=\\\"lds-roller\\\">\\n              <div></div>\\n              <div></div>\\n              <div></div>\\n              <div></div>\\n              <div></div>\\n              <div></div>\\n              <div></div>\\n              <div></div>\\n            </div>\\n            <table\\n              *ngIf=\\\"!transportationPerforming\\\"\\n              mat-table\\n              [dataSource]=\\\"transportations\\\"\\n              class=\\\"mat-elevation-z8\\\"\\n            >\\n              <ng-container matColumnDef=\\\"packageId\\\">\\n                <th mat-header-cell *matHeaderCellDef>Package Id</th>\\n                <td mat-cell *matCellDef=\\\"let element\\\">{{ element.packageId }}</td>\\n              </ng-container>\\n              <ng-container matColumnDef=\\\"toLocation\\\">\\n                <th mat-header-cell *matHeaderCellDef>To Location</th>\\n                <td mat-cell *matCellDef=\\\"let element\\\">\\n                  {{ element.toLocation }}\\n                </td>\\n              </ng-container>\\n              <ng-container matColumnDef=\\\"distributorName\\\">\\n                <th mat-header-cell *matHeaderCellDef>\\n                  Distributor Name\\n                </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\">\\n                  {{ element.distributorName }}\\n                </td>\\n              </ng-container>\\n              <tr mat-header-row *matHeaderRowDef=\\\"transportationColumns\\\"></tr>\\n              <tr mat-row *matRowDef=\\\"let row; columns: transportationColumns\\\"></tr>\\n            </table>\\n            <div *ngIf=\\\"transportationError !== ''\\\" class=\\\"error-box\\\">\\n              {{ transportationError }}\\n            </div>\\n          </mat-card-content>\\n        </mat-card>\\n      </div>\\n    </div>\\n  </mat-tab>\\n\\n  <!-- INVENTORY -->\\n  <mat-tab label=\\\"Inventory\\\">\\n    <h2>\\n      You can register a new inventory entry by filling the form and clicking on\\n      the\\n      <em>Register Entry</em> button.\\n    </h2>\\n    <div class=\\\"wrapper\\\">\\n      <mat-card class=\\\"form-card\\\">\\n        <mat-card-header>\\n          <mat-card-title>Fill the form with all information about the shipment</mat-card-title>\\n        </mat-card-header>\\n        <mat-card-content class=\\\"form-box\\\">\\n          <form\\n          [formGroup]=\\\"inventoryEntryForm\\\"\\n          (ngSubmit)=\\\"onRegisterInInventory(inventoryEntryForm.value)\\\"\\n        >\\n            <mat-form-field>\\n              <input\\n                matInput\\n                formControlName=\\\"packageId\\\"\\n                placeholder=\\\"Package id..\\\"\\n              />\\n            </mat-form-field>\\n            <mat-form-field>\\n              <input\\n                matInput\\n                formControlName=\\\"retailerName\\\"\\n                placeholder=\\\"Retailer name..\\\"\\n              />\\n            </mat-form-field>\\n            <button class=\\\"button\\\" type=\\\"submit\\\">Register Entry</button>\\n          </form>\\n          <div class=\\\"result-box\\\">\\n            <div *ngIf=\\\"performing\\\" class=\\\"lds-roller mt-4\\\">\\n              <div></div>\\n              <div></div>\\n              <div></div>\\n              <div></div>\\n              <div></div>\\n              <div></div>\\n              <div></div>\\n              <div></div>\\n            </div>\\n            <div *ngIf=\\\"!performing\\\" class=\\\"mt-4\\\">\\n              {{ result }}\\n            </div>\\n          </div>\\n        </mat-card-content>\\n      </mat-card>\\n      <div class=\\\"query-box\\\">\\n        <!-- INVENTORY -->\\n        <mat-card>\\n          <mat-card-header>\\n            <mat-card-title>Packages In Inventory </mat-card-title>\\n          </mat-card-header>\\n          <mat-card-content>\\n            <div *ngIf=\\\"entryPerforming\\\" class=\\\"lds-roller\\\">\\n              <div></div>\\n              <div></div>\\n              <div></div>\\n              <div></div>\\n              <div></div>\\n              <div></div>\\n              <div></div>\\n              <div></div>\\n            </div>\\n            <table\\n              *ngIf=\\\"!entryPerforming\\\"\\n              mat-table\\n              [dataSource]=\\\"entries\\\"\\n              class=\\\"mat-elevation-z8\\\"\\n            >\\n              <ng-container matColumnDef=\\\"packageId\\\">\\n                <th mat-header-cell *matHeaderCellDef>Package Id</th>\\n                <td mat-cell *matCellDef=\\\"let element\\\">{{ element.packageId }}</td>\\n              </ng-container>\\n              <ng-container matColumnDef=\\\"retailerName\\\">\\n                <th mat-header-cell *matHeaderCellDef>Retailer Name</th>\\n                <td mat-cell *matCellDef=\\\"let element\\\">{{ element.retailerName }}</td>\\n              </ng-container>\\n              <tr mat-header-row *matHeaderRowDef=\\\"entryColumns\\\"></tr>\\n              <tr mat-row *matRowDef=\\\"let row; columns: entryColumns\\\"></tr>\\n            </table>\\n            <div *ngIf=\\\"entryError !== ''\\\" class=\\\"error-box\\\">\\n              {{ entryError }}\\n            </div>\\n          </mat-card-content>\\n        </mat-card>\\n      </div>\\n    </div>\\n  </mat-tab>\\n\\n  <!-- SALES -->\\n  <mat-tab label=\\\"Retailer\\\">\\n    <h2>\\n      You can register a new fishes' package sale by filling the form and\\n      clicking on the\\n      <em>Register Sale</em> button.\\n    </h2>\\n    <div class=\\\"wrapper\\\">\\n      <mat-card class=\\\"form-card\\\">\\n        <mat-card-header>\\n          <mat-card-title>Fill the form with all information about the shipment</mat-card-title>\\n        </mat-card-header>\\n        <mat-card-content class=\\\"form-box\\\">\\n          <form\\n          [formGroup]=\\\"sellingForm\\\"\\n          (ngSubmit)=\\\"onRegisterSelling(sellingForm.value)\\\"\\n        >\\n            <mat-form-field>\\n              <input\\n                matInput\\n                formControlName=\\\"packageId\\\"\\n                placeholder=\\\"Package id..\\\"\\n              />\\n            </mat-form-field>\\n            <button class=\\\"button\\\" type=\\\"submit\\\">Register Sale</button>\\n          </form>\\n          <div class=\\\"result-box\\\">\\n            <div *ngIf=\\\"performing\\\" class=\\\"lds-roller mt-4\\\">\\n              <div></div>\\n              <div></div>\\n              <div></div>\\n              <div></div>\\n              <div></div>\\n              <div></div>\\n              <div></div>\\n              <div></div>\\n            </div>\\n            <div *ngIf=\\\"!performing\\\" class=\\\"mt-4\\\">\\n              {{ result }}\\n            </div>\\n          </div>\\n        </mat-card-content>\\n      </mat-card>\\n      <div class=\\\"query-box\\\">\\n        <mat-card>\\n          <mat-card-header>\\n            <mat-card-title>Sold Packages</mat-card-title>\\n          </mat-card-header>\\n          <mat-card-content>\\n            <div *ngIf=\\\"salePerforming\\\" class=\\\"lds-roller\\\">\\n              <div></div>\\n              <div></div>\\n              <div></div>\\n              <div></div>\\n              <div></div>\\n              <div></div>\\n              <div></div>\\n              <div></div>\\n            </div>\\n            <table\\n              *ngIf=\\\"!salePerforming\\\"\\n              mat-table\\n              [dataSource]=\\\"sales\\\"\\n              class=\\\"mat-elevation-z8\\\"\\n            >\\n              <ng-container matColumnDef=\\\"packageId\\\">\\n                <th mat-header-cell *matHeaderCellDef>Package Id</th>\\n                <td mat-cell *matCellDef=\\\"let element\\\">{{ element.packageId }}</td>\\n              </ng-container>\\n              <tr mat-header-row *matHeaderRowDef=\\\"saleColumns\\\"></tr>\\n              <tr mat-row *matRowDef=\\\"let row; columns: saleColumns\\\"></tr>\\n            </table>\\n            <div *ngIf=\\\"saleError !== ''\\\" class=\\\"error-box\\\">\\n              {{ saleError }}\\n            </div>\\n          </mat-card-content>\\n        </mat-card>\\n      </div>\\n    </div>\\n  </mat-tab>\\n\\n  <!-- PROVENANCE -->\\n  <mat-tab label=\\\"Provenance\\\" class=\\\"tab-provenance\\\">\\n    <h2>\\n      You can query the provenance of a specific package providing its identifier\\n      and clicking on the\\n      <em>Get Provenance</em> button.\\n      Click on a specific node to get more information about it.\\n    </h2>\\n    <div class=\\\"prov-wrapper\\\">\\n      <div class=\\\"prov-form-box mat-elevation-z3\\\">\\n        <form\\n          [formGroup]=\\\"provenanceForm\\\"\\n          (ngSubmit)=\\\"retrieveProvenance(provenanceForm.value)\\\"\\n        >\\n          <mat-form-field>\\n            <input\\n              matInput\\n              formControlName=\\\"packageId\\\"\\n              placeholder=\\\"Package Id..\\\"\\n            />\\n          </mat-form-field>\\n          <button mat-button class=\\\"submit-btn button\\\" type=\\\"submit\\\">Get Provenance</button>\\n          <button mat-button class=\\\"clear-btn button\\\" type=\\\"button\\\" (click)=\\\"clearProvenance()\\\">Clear</button>\\n        </form>\\n        <div class=\\\"node-info\\\">\\n          <h3 *ngIf=\\\"showInfo === 'selling'\\\"> Selling Occurence </h3>\\n          <table\\n            mat-table\\n            *ngIf=\\\"showInfo === 'selling'\\\"\\n            [dataSource]=\\\"salesProv\\\"\\n            class=\\\"mat-elevation-z8\\\"\\n          >\\n            <ng-container matColumnDef=\\\"isoTimestamp\\\">\\n              <th mat-header-cell *matHeaderCellDef>ISO Timestamp</th>\\n              <td mat-cell *matCellDef=\\\"let element\\\">{{ element.isoTimestamp }}</td>\\n            </ng-container>\\n            <ng-container matColumnDef=\\\"packageId\\\">\\n              <th mat-header-cell *matHeaderCellDef>Package Id</th>\\n              <td mat-cell *matCellDef=\\\"let element\\\">{{ element.occurrence.packageId }}</td>\\n            </ng-container>\\n            <tr mat-header-row *matHeaderRowDef=\\\"saleProvColumns\\\"></tr>\\n            <tr mat-row *matRowDef=\\\"let row; columns: saleProvColumns\\\"></tr>\\n          </table>\\n          <h3 *ngIf=\\\"showInfo === 'inventory'\\\"> Inventory Occurence </h3>\\n          <table\\n            mat-table\\n            *ngIf=\\\"showInfo === 'inventory'\\\"\\n            [dataSource]=\\\"entriesProv\\\"\\n            class=\\\"mat-elevation-z8\\\"\\n          >\\n            <ng-container matColumnDef=\\\"isoTimestamp\\\">\\n              <th mat-header-cell *matHeaderCellDef>ISO Timestamp</th>\\n              <td mat-cell *matCellDef=\\\"let element\\\">{{ element.isoTimestamp }}</td>\\n            </ng-container>\\n            <ng-container matColumnDef=\\\"packageId\\\">\\n              <th mat-header-cell *matHeaderCellDef>Package Id</th>\\n              <td mat-cell *matCellDef=\\\"let element\\\">{{ element.occurrence.packageId }}</td>\\n            </ng-container>\\n            <ng-container matColumnDef=\\\"retailerName\\\">\\n              <th mat-header-cell *matHeaderCellDef>Retailer Name</th>\\n              <td mat-cell *matCellDef=\\\"let element\\\">{{ element.occurrence.retailerName }}</td>\\n            </ng-container>\\n            <tr mat-header-row *matHeaderRowDef=\\\"entryProvColumns\\\"></tr>\\n            <tr mat-row *matRowDef=\\\"let row; columns: entryProvColumns\\\"></tr>\\n          </table>\\n          <h3 *ngIf=\\\"showInfo === 'transportation'\\\"> Transportation Occurence </h3>\\n          <table\\n            mat-table\\n            *ngIf=\\\"showInfo === 'transportation'\\\"\\n            [dataSource]=\\\"transportationsProv\\\"\\n            class=\\\"mat-elevation-z8\\\"\\n          >\\n            <ng-container matColumnDef=\\\"isoTimestamp\\\">\\n              <th mat-header-cell *matHeaderCellDef>ISO Timestamp</th>\\n              <td mat-cell *matCellDef=\\\"let element\\\">{{ element.isoTimestamp }}</td>\\n            </ng-container>\\n            <ng-container matColumnDef=\\\"packageId\\\">\\n              <th mat-header-cell *matHeaderCellDef>Package Id</th>\\n              <td mat-cell *matCellDef=\\\"let element\\\">{{ element.occurrence.packageId }}</td>\\n            </ng-container>\\n            <ng-container matColumnDef=\\\"toLocation\\\">\\n              <th mat-header-cell *matHeaderCellDef>To Location</th>\\n              <td mat-cell *matCellDef=\\\"let element\\\">\\n                {{ element.occurrence.toLocation }}\\n              </td>\\n            </ng-container>\\n            <ng-container matColumnDef=\\\"distributorName\\\">\\n              <th mat-header-cell *matHeaderCellDef>\\n                Distributor Name\\n              </th>\\n              <td mat-cell *matCellDef=\\\"let element\\\">\\n                {{ element.occurrence.distributorName }}\\n              </td>\\n            </ng-container>\\n            <tr mat-header-row *matHeaderRowDef=\\\"transportationProvColumns\\\"></tr>\\n            <tr mat-row *matRowDef=\\\"let row; columns: transportationProvColumns\\\"></tr>\\n          </table>\\n          <h3 *ngIf=\\\"showInfo === 'package'\\\"> Packaging Occurence </h3>\\n          <table\\n            mat-table\\n            *ngIf=\\\"showInfo === 'package'\\\"\\n            [dataSource]=\\\"packagesProv\\\"\\n            class=\\\"mat-elevation-z8\\\"\\n          >\\n            <ng-container matColumnDef=\\\"isoTimestamp\\\">\\n              <th mat-header-cell *matHeaderCellDef>ISO Timestamp</th>\\n              <td mat-cell *matCellDef=\\\"let element\\\">{{ element.isoTimestamp }}</td>\\n            </ng-container>\\n            <ng-container matColumnDef=\\\"fishIds\\\">\\n              <th mat-header-cell *matHeaderCellDef>Fish Ids</th>\\n              <td mat-cell *matCellDef=\\\"let element\\\">{{ element.occurrence.fishIds }}</td>\\n            </ng-container>\\n            <ng-container matColumnDef=\\\"packageId\\\">\\n              <th mat-header-cell *matHeaderCellDef>Package Id</th>\\n              <td mat-cell *matCellDef=\\\"let element\\\">\\n                {{ element.occurrence.packageId }}\\n              </td>\\n            </ng-container>\\n            <ng-container matColumnDef=\\\"processingFacilityName\\\">\\n              <th mat-header-cell *matHeaderCellDef>\\n                Processing Facility Name\\n              </th>\\n              <td mat-cell *matCellDef=\\\"let element\\\">\\n                {{ element.occurrence.processingFacilityName }}\\n              </td>\\n            </ng-container>\\n            <tr mat-header-row *matHeaderRowDef=\\\"packageProvColumns\\\"></tr>\\n            <tr mat-row *matRowDef=\\\"let row; columns: packageProvColumns\\\"></tr>\\n          </table>\\n          <h3 *ngIf=\\\"showInfo === 'shipment'\\\"> Fish Shipment Occurence </h3>\\n          <table\\n            mat-table\\n            *ngIf=\\\"showInfo === 'shipment'\\\"\\n            [dataSource]=\\\"shipmentsProv\\\"\\n            class=\\\"mat-elevation-z8\\\"\\n          >\\n            <ng-container matColumnDef=\\\"isoTimestamp\\\">\\n              <th mat-header-cell *matHeaderCellDef>ISO Timestamp</th>\\n              <td mat-cell *matCellDef=\\\"let element\\\">{{ element.isoTimestamp }}</td>\\n            </ng-container>\\n            <ng-container matColumnDef=\\\"fishIds\\\">\\n              <th mat-header-cell *matHeaderCellDef>Fish Ids</th>\\n              <td mat-cell *matCellDef=\\\"let element\\\">{{ element.occurrence.fishIds }}</td>\\n            </ng-container>\\n            <ng-container matColumnDef=\\\"toLocation\\\">\\n              <th mat-header-cell *matHeaderCellDef>To Location</th>\\n              <td mat-cell *matCellDef=\\\"let element\\\">\\n                {{ element.occurrence.toLocation }}\\n              </td>\\n            </ng-container>\\n            <ng-container matColumnDef=\\\"shipmentCompanyName\\\">\\n              <th mat-header-cell *matHeaderCellDef>\\n                Shipment Company Name\\n              </th>\\n              <td mat-cell *matCellDef=\\\"let element\\\">\\n                {{ element.occurrence.shipmentCompanyName }}\\n              </td>\\n            </ng-container>\\n            <tr mat-header-row *matHeaderRowDef=\\\"shipmentProvColumns\\\"></tr>\\n            <tr mat-row *matRowDef=\\\"let row; columns: shipmentProvColumns\\\"></tr>\\n          </table>\\n          <h3 *ngIf=\\\"showInfo === 'fish'\\\"> Fish Catching Occurences </h3>\\n          <table\\n            mat-table\\n            *ngIf=\\\"showInfo === 'fish'\\\"\\n            [dataSource]=\\\"fishesProv\\\"\\n            class=\\\"mat-elevation-z8\\\">\\n            <ng-container matColumnDef=\\\"isoTimestamp\\\">\\n              <th mat-header-cell *matHeaderCellDef>ISO Timestamp</th>\\n              <td mat-cell *matCellDef=\\\"let element\\\">{{ element.isoTimestamp }}</td>\\n            </ng-container>\\n            <ng-container matColumnDef=\\\"fishId\\\">\\n              <th mat-header-cell *matHeaderCellDef>Fish Id</th>\\n              <td mat-cell *matCellDef=\\\"let element\\\">{{ element.occurrence.fishId }}</td>\\n            </ng-container>\\n            <ng-container matColumnDef=\\\"location\\\">\\n              <th mat-header-cell *matHeaderCellDef>Location</th>\\n              <td mat-cell *matCellDef=\\\"let element\\\">{{ element.occurrence.location }}</td>\\n            </ng-container>\\n            <ng-container matColumnDef=\\\"fishermanName\\\">\\n              <th mat-header-cell *matHeaderCellDef>Fisherman Name</th>\\n              <td mat-cell *matCellDef=\\\"let element\\\">\\n                {{ element.occurrence.fishermanName }}\\n              </td>\\n            </ng-container>\\n            <tr mat-header-row *matHeaderRowDef=\\\"fishProvColumns\\\"></tr>\\n            <tr mat-row *matRowDef=\\\"let row; columns: fishProvColumns\\\"></tr>\\n          </table>\\n        </div>\\n      </div>\\n      <div class=\\\"prov-result-box\\\">\\n        <div class=\\\"spinner\\\">\\n          <div *ngIf=\\\"performing\\\" class=\\\"lds-roller\\\">\\n            <div></div>\\n            <div></div>\\n            <div></div>\\n            <div></div>\\n            <div></div>\\n            <div></div>\\n            <div></div>\\n            <div></div>\\n          </div>\\n        </div>\\n        <div *ngIf=\\\"!performing && error !== ''\\\" class=\\\"error-box\\\">\\n          <h3>{{ error }}</h3>\\n        </div>\\n        <div *ngIf=\\\"!performing && nodes.length !== 0 && error === ''\\\" class=\\\"page\\\">\\n          <ngx-graph\\n            class=\\\"graph\\\"\\n            [update$]=\\\"update$\\\"\\n            [center$]=\\\"center$\\\"\\n            [zoomToFit$]=\\\"zoomToFit$\\\"\\n            [links]=\\\"links\\\"\\n            [nodes]=\\\"nodes\\\"\\n            [layout]=\\\"dagre\\\"\\n            [curve]=\\\"curve\\\"\\n            [draggingEnabled]=\\\"false\\\"\\n            [panningEnabled]=\\\"true\\\"\\n            [enableZoom]=\\\"false\\\"\\n            [panOnZoom]=\\\"false\\\"\\n            [autoZoom]=\\\"true\\\"\\n            [autoCenter]=\\\"true\\\"\\n          >\\n    \\n            <ng-template #defsTemplate>\\n              <svg:marker id=\\\"arrow\\\" viewBox=\\\"0 -5 10 10\\\" refX=\\\"8\\\" refY=\\\"0\\\" markerWidth=\\\"4\\\" markerHeight=\\\"4\\\" orient=\\\"auto\\\">\\n                <svg:path d=\\\"M0,-5L10,0L0,5\\\" class=\\\"arrow-head\\\" />\\n              </svg:marker>\\n            </ng-template>\\n\\n            <ng-template #clusterTemplate let-cluster>\\n              <svg:g class=\\\"node cluster\\\">\\n                <svg:rect rx=\\\"5\\\" ry=\\\"5\\\" [attr.width]=\\\"cluster.dimension.width\\\" [attr.height]=\\\"cluster.dimension.height\\\" [attr.fill]=\\\"cluster.data.color\\\" />\\n              </svg:g>\\n            </ng-template>\\n    \\n            <ng-template #nodeTemplate let-node>\\n              <svg:g class=\\\"node node-box\\\" (click)=\\\"onNodeClicked($event)\\\">\\n                <!-- <svg:ellipse id=\\\"{{node.id}}\\\" [attr.cx]=\\\"node.dimension.width/(2)\\\" [attr.cy]=\\\"node.dimension.height/(2)\\\" [attr.rx]=\\\"node.dimension.width/(1.80)\\\" [attr.ry]=\\\"node.dimension.height/(1.75)\\\" [attr.fill]=\\\"node.data.color\\\" /> -->\\n                <svg:rect id=\\\"{{node.id}}\\\" [attr.width]=\\\"node.dimension.width\\\" [attr.height]=\\\"node.dimension.height\\\" [attr.rx]=\\\"10\\\" [attr.ry]=\\\"10\\\" [attr.fill]=\\\"node.data.color\\\" />\\n                <svg:text id=\\\"{{node.id}}\\\" alignment-baseline=\\\"central\\\" [attr.x]=\\\"10\\\" [attr.y]=\\\"node.dimension.height/(1.5)\\\">{{node.label}}</svg:text>\\n              </svg:g>\\n            </ng-template>\\n    \\n            <ng-template #linkTemplate let-link>\\n              <svg:g class=\\\"edge\\\" (click)=\\\"onEdgeClicked($event)\\\">\\n                <svg:path class=\\\"line\\\" stroke-width=\\\"2\\\" marker-end=\\\"url(#arrow)\\\">\\n                </svg:path>\\n                <svg:text class=\\\"edge-label\\\" text-anchor=\\\"middle\\\">\\n                  <textPath class=\\\"text-path\\\" [attr.href]=\\\"'#' + link.id\\\" [style.dominant-baseline]=\\\"link.dominantBaseline\\\" startOffset=\\\"50%\\\">\\n                    {{link.label}}\\n                  </textPath>\\n                </svg:text>\\n              </svg:g>\\n            </ng-template>\\n          </ngx-graph>\\n        </div>\\n      </div>\\n    </div>\\n  </mat-tab>\\n</mat-tab-group>\\n\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, from, of } from 'rxjs';\nimport { environment } from '../environments/environment';\nimport Fish from './models/Fish';\nimport FishShipment from './models/FishShipment';\nimport FishPackage from './models/FishPackage';\nimport PackageTransportation from './models/PackageTransportation';\nimport InventoryEntry from './models/InventoryEntry';\nimport PackageSelling from './models/PackageSelling';\nimport SeafoodProvenance from './models/SeafoodProvenance';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  constructor(private http: HttpClient) { }\n\n  /********************************** FISH **********************************/\n\n  public registerCapturedFish(fish: Fish): Observable<string> {\n    const url = `${environment.apiUrl}/seafood/fish`;\n    return this.http.post(url, fish, { responseType: 'text' });\n  }\n\n  public getAllRegisteredFishes(): Observable<Fish[]> {\n    const url = `${environment.apiUrl}/seafood/fish`;\n    return this.http.get<Fish[]>(url);\n  }\n\n  /******************************** SHIPMENT ********************************/\n\n  public registerShipment(fishShipment: FishShipment): Observable<string>  {\n    const url = `${environment.apiUrl}/seafood/shipment`;\n    return this.http.post(url, fishShipment, { responseType: 'text' });\n  }\n\n  public getAllRegisteredShipments(): Observable<FishShipment[]> {\n    const url = `${environment.apiUrl}/seafood/shipment`;\n    return this.http.get<FishShipment[]>(url);\n  }\n\n  /******************************* PACKAGING ********************************/\n\n  public registerPackage(fishPackage: FishPackage): Observable<string>  {\n    const url = `${environment.apiUrl}/seafood/package`;\n    return this.http.post(url, fishPackage, { responseType: 'text' });\n  }\n\n  public getAllRegisteredPackages(): Observable<FishPackage[]> {\n    const url = `${environment.apiUrl}/seafood/package`;\n    return this.http.get<FishPackage[]>(url);\n  }\n\n  /***************************** TRANSPORTATION *****************************/\n\n  public registerTransportation(packageTransportation: PackageTransportation): Observable<string>  {\n    const url = `${environment.apiUrl}/seafood/transportation`;\n    return this.http.post(url, packageTransportation, { responseType: 'text' });\n  }\n\n  public getAllRegisteredTransportations(): Observable<PackageTransportation[]> {\n    const url = `${environment.apiUrl}/seafood/transportation`;\n    return this.http.get<PackageTransportation[]>(url);\n  }\n\n  /******************************* INVENTORY ********************************/\n\n  public registerInInventory(inventoryEntry: InventoryEntry): Observable<string>  {\n    const url = `${environment.apiUrl}/seafood/inventory`;\n    return this.http.post(url, inventoryEntry, { responseType: 'text' });\n  }\n\n  public getAllPackagesRegisteredInInventories(): Observable<InventoryEntry[]> {\n    const url = `${environment.apiUrl}/seafood/inventory`;\n    return this.http.get<InventoryEntry[]>(url);\n  }\n\n  /******************************** SELLING *********************************/\n\n  public registerSelling(packageSelling: PackageSelling): Observable<string>  {\n    const url = `${environment.apiUrl}/seafood/selling`;\n    return this.http.post(url, packageSelling, { responseType: 'text' });\n  }\n\n  public getAllSoldPackages(): Observable<PackageSelling[]> {\n    const url = `${environment.apiUrl}/seafood/selling`;\n    return this.http.get<PackageSelling[]>(url);\n  }\n\n  /******************************* PROVENANCE *******************************/\n\n  public retrieveProvenance(packageId: string): Observable<SeafoodProvenance> {\n    const url = `${environment.apiUrl}/seafood/provenance?packageId=${packageId}`;\n    return this.http.get<SeafoodProvenance>(url);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SeafoodComponent } from './pages/seafood/seafood.component';\n\n\nconst routes: Routes = [\n  { path: '', component: SeafoodComponent },\n  { path: '**', redirectTo: '/'}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule { }\n","export default \".wrapper {\\r\\n  display: -webkit-box;\\r\\n  display: flex;\\r\\n  margin-top: 30px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxvQkFBYTtFQUFiLGFBQWE7RUFDYixnQkFBZ0I7QUFDbEIiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi53cmFwcGVyIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIG1hcmdpbi10b3A6IDMwcHg7XHJcbn1cclxuIl19 */\"","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'Smart Contract Invocation Protocol (SCIP) Case Study';\n\n  ngOnInit(): void {\n  }\n\n  constructor() {\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { MaterialModule } from './material.module';\nimport { ApiService } from './api.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { SeafoodComponent } from './pages/seafood/seafood.component';\nimport { DairyComponent } from './pages/dairy/dairy.component';\nimport { IndexComponent } from './pages/index/index.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SeafoodComponent,\n    DairyComponent,\n    IndexComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    MaterialModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [ApiService, HttpClientModule],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import { NgModule } from '@angular/core';\r\n\r\n// tslint:disable-next-line:max-line-length\r\nimport { MatButtonModule, MatCardModule, MatDividerModule, MatChipsModule, MatIconModule, MatTableModule, MatSlideToggleModule, MatDrawerContent, MatSidenavModule } from '@angular/material';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { NgxGraphModule } from '@swimlane/ngx-graph';\r\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\r\n\r\n@NgModule({\r\n  imports: [\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatDividerModule,\r\n    MatListModule,\r\n    MatInputModule,\r\n    MatTabsModule,\r\n    MatSnackBarModule,\r\n    MatChipsModule,\r\n    MatIconModule,\r\n    MatTableModule,\r\n    MatSlideToggleModule,\r\n    NgxGraphModule,\r\n    NgxChartsModule\r\n  ],\r\n  exports: [\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatDividerModule,\r\n    MatListModule,\r\n    MatInputModule,\r\n    MatTabsModule,\r\n    MatChipsModule,\r\n    MatIconModule,\r\n    MatTableModule,\r\n    MatSlideToggleModule,\r\n    NgxGraphModule,\r\n    NgxChartsModule\r\n  ]\r\n})\r\nexport class MaterialModule {\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2RhaXJ5L2RhaXJ5LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dairy',\n  templateUrl: './dairy.component.html',\n  styleUrls: ['./dairy.component.css']\n})\nexport class DairyComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \".subtitle {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n          flex-direction: column;\\n  -webkit-box-align: center;\\n          align-items: center;\\n}\\n\\n.main {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  -webkit-box-align: center;\\n          align-items: center;\\n  -webkit-box-pack: center;\\n          justify-content: center;\\n}\\n\\n.main button {\\n  margin: 20px;\\n  width: 20%;\\n  height: 180px;\\n}\\n\\n.main .to-seafood {\\n  background-color: rgb(45, 198, 209);\\n}\\n\\n.main .to-dairy {\\n  background-color: rgb(255, 228, 196);\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvaW5kZXgvaW5kZXguY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLG9CQUFhO0VBQWIsYUFBYTtFQUNiLDRCQUFzQjtFQUF0Qiw2QkFBc0I7VUFBdEIsc0JBQXNCO0VBQ3RCLHlCQUFtQjtVQUFuQixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxvQkFBYTtFQUFiLGFBQWE7RUFDYiw4QkFBbUI7RUFBbkIsNkJBQW1CO1VBQW5CLG1CQUFtQjtFQUNuQix5QkFBbUI7VUFBbkIsbUJBQW1CO0VBQ25CLHdCQUF1QjtVQUF2Qix1QkFBdUI7QUFDekI7O0FBRUE7RUFDRSxZQUFZO0VBQ1osVUFBVTtFQUNWLGFBQWE7QUFDZjs7QUFFQTtFQUNFLG1DQUFtQztBQUNyQzs7QUFFQTtFQUNFLG9DQUFvQztBQUN0QyIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2luZGV4L2luZGV4LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuc3VidGl0bGUge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG4ubWFpbiB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xufVxuXG4ubWFpbiBidXR0b24ge1xuICBtYXJnaW46IDIwcHg7XG4gIHdpZHRoOiAyMCU7XG4gIGhlaWdodDogMTgwcHg7XG59XG5cbi5tYWluIC50by1zZWFmb29kIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDQ1LCAxOTgsIDIwOSk7XG59XG5cbi5tYWluIC50by1kYWlyeSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYigyNTUsIDIyOCwgMTk2KTtcbn1cbiJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-index',\n  templateUrl: './index.component.html',\n  styleUrls: ['./index.component.css']\n})\nexport class IndexComponent implements OnInit {\n\n  constructor(private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  toSeafood() {\n    this.router.navigate(['/seafood']);\n  }\n\n  toDairy() {\n    this.router.navigate(['/dairy']);\n  }\n}\n","export default \".head-box {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n          flex-direction: column;\\n  -webkit-box-align: center;\\n          align-items: center;\\n}\\n\\n.wrapper {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  margin-top: 30px;\\n}\\n\\nform {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n          flex-direction: column;\\n}\\n\\n.form-card {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n          flex-direction: column;\\n  width: 45%;\\n  padding: 10px;\\n  background-color: rgb(206, 204, 204);\\n}\\n\\n.form-card .form-box {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n          flex-direction: column;\\n  -webkit-box-align: stretch;\\n          align-items: stretch;\\n}\\n\\n.result-box {\\n  margin-top: 15px;\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n          flex-direction: column;\\n  -webkit-box-align: center;\\n          align-items: center;\\n  -webkit-box-pack: center;\\n          justify-content: center;\\n}\\n\\n.query-box {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n          flex-direction: column;\\n  width: 55%;\\n}\\n\\nmat-card-content {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n          flex-direction: column;\\n  -webkit-box-align: center;\\n          align-items: center;\\n}\\n\\nmat-card-content table {\\n  width: 100%;\\n}\\n\\nmat-card-content .error-box {\\n  text-align: center;\\n  margin-top: 15px;\\n  color: rgb(192, 4, 4);\\n}\\n\\nmat-card {\\n  background-color: rgb(206, 204, 204);\\n  margin: 10px;\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n          flex-direction: column;\\n}\\n\\nmat-card mat-card-actions {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  -webkit-box-align: center;\\n          align-items: center;\\n}\\n\\nmat-card mat-card-actions button {\\n  width: 50%;\\n}\\n\\nmat-card mat-card-actions .clear-btn {\\n  background-color: rgb(235, 139, 139);\\n}\\n\\nmat-card mat-card-actions .query-btn {\\n  background-color: rgb(174, 219, 144);\\n  width: 50%;\\n}\\n\\n.prov-wrapper {\\n  margin-top: 30px;\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n          flex-direction: column;\\n  -webkit-box-align: center;\\n          align-items: center;\\n  width: 100%;\\n  /* margin: 50px; */\\n}\\n\\n.prov-form-box {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n          flex-direction: column;\\n  -webkit-box-align: stretch;\\n          align-items: stretch;\\n  width: 70%;\\n  padding: 10px;\\n  margin: 15px 15px 0px 15px;\\n  background-color: rgb(206, 204, 204);\\n}\\n\\n.prov-form-box form > .submit-btn {\\n  background-color: #fff;\\n  margin: 10px 10px 4px 10px;\\n}\\n\\n.prov-form-box form > .clear-btn {\\n  background-color: rgb(235, 139, 139);\\n  margin: 4px 10px 10px 10px;\\n}\\n\\n.prov-result-box {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n          flex-direction: column;\\n  -webkit-box-align: stretch;\\n          align-items: stretch;\\n  align-content: center;\\n  width: 100%;\\n}\\n\\n.prov-result-box .spinner {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n          flex-direction: column;\\n  -webkit-box-align: center;\\n          align-items: center;\\n  margin: 40px;\\n}\\n\\n.prov-result-box .error-box {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n          flex-direction: column;\\n  -webkit-box-align: center;\\n          align-items: center;\\n}\\n\\n.prov-result-box .error-box h3 {\\n  color: rgb(192, 4, 4);\\n}\\n\\n.prov-result-box .prov-tables-box {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n          flex-direction: column;\\n  -webkit-box-align: stretch;\\n          align-items: stretch;\\n}\\n\\n.prov-result-box .prov-tables-box table {\\n  width: 100%;\\n  margin: 10px;\\n}\\n\\n/* GRAPH */\\n\\n.page {\\n  width: 100%;\\n  height: 60vh;\\n  overflow-x: hidden;\\n  overflow-y: hidden;\\n}\\n\\n.page .graph {\\n  pointer-events: none;\\n  padding: 20px 50px;\\n}\\n\\n.page .graph .node-box {\\n  pointer-events: all;\\n  cursor: pointer;\\n}\\n\\n.page .graph .node-box:hover {\\n  opacity: 0.5;\\n}\\n\\n.node-info {\\n  width: 100%;\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n          flex-direction: column;\\n  -webkit-box-align: stretch;\\n          align-items: stretch;\\n}\\n\\n.node-info table {\\n  width: 100%;\\n}\\n\\n/* SPINNER */\\n\\n.lds-roller {\\n  display: inline-block;\\n  position: relative;\\n  width: 80px;\\n  height: 80px;\\n}\\n\\n.lds-roller div {\\n  -webkit-animation: lds-roller 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;\\n          animation: lds-roller 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;\\n  -webkit-transform-origin: 40px 40px;\\n          transform-origin: 40px 40px;\\n}\\n\\n.lds-roller div:after {\\n  content: \\\" \\\";\\n  display: block;\\n  position: absolute;\\n  width: 7px;\\n  height: 7px;\\n  border-radius: 50%;\\n  background: black;\\n  margin: -4px 0 0 -4px;\\n}\\n\\n.lds-roller div:nth-child(1) {\\n  -webkit-animation-delay: -0.036s;\\n          animation-delay: -0.036s;\\n}\\n\\n.lds-roller div:nth-child(1):after {\\n  top: 63px;\\n  left: 63px;\\n}\\n\\n.lds-roller div:nth-child(2) {\\n  -webkit-animation-delay: -0.072s;\\n          animation-delay: -0.072s;\\n}\\n\\n.lds-roller div:nth-child(2):after {\\n  top: 68px;\\n  left: 56px;\\n}\\n\\n.lds-roller div:nth-child(3) {\\n  -webkit-animation-delay: -0.108s;\\n          animation-delay: -0.108s;\\n}\\n\\n.lds-roller div:nth-child(3):after {\\n  top: 71px;\\n  left: 48px;\\n}\\n\\n.lds-roller div:nth-child(4) {\\n  -webkit-animation-delay: -0.144s;\\n          animation-delay: -0.144s;\\n}\\n\\n.lds-roller div:nth-child(4):after {\\n  top: 72px;\\n  left: 40px;\\n}\\n\\n.lds-roller div:nth-child(5) {\\n  -webkit-animation-delay: -0.18s;\\n          animation-delay: -0.18s;\\n}\\n\\n.lds-roller div:nth-child(5):after {\\n  top: 71px;\\n  left: 32px;\\n}\\n\\n.lds-roller div:nth-child(6) {\\n  -webkit-animation-delay: -0.216s;\\n          animation-delay: -0.216s;\\n}\\n\\n.lds-roller div:nth-child(6):after {\\n  top: 68px;\\n  left: 24px;\\n}\\n\\n.lds-roller div:nth-child(7) {\\n  -webkit-animation-delay: -0.252s;\\n          animation-delay: -0.252s;\\n}\\n\\n.lds-roller div:nth-child(7):after {\\n  top: 63px;\\n  left: 17px;\\n}\\n\\n.lds-roller div:nth-child(8) {\\n  -webkit-animation-delay: -0.288s;\\n          animation-delay: -0.288s;\\n}\\n\\n.lds-roller div:nth-child(8):after {\\n  top: 56px;\\n  left: 12px;\\n}\\n\\n@-webkit-keyframes lds-roller {\\n  0% {\\n    -webkit-transform: rotate(0deg);\\n            transform: rotate(0deg);\\n  }\\n  100% {\\n    -webkit-transform: rotate(360deg);\\n            transform: rotate(360deg);\\n  }\\n}\\n\\n@keyframes lds-roller {\\n  0% {\\n    -webkit-transform: rotate(0deg);\\n            transform: rotate(0deg);\\n  }\\n  100% {\\n    -webkit-transform: rotate(360deg);\\n            transform: rotate(360deg);\\n  }\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvc2VhZm9vZC9zZWFmb29kLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxvQkFBYTtFQUFiLGFBQWE7RUFDYiw0QkFBc0I7RUFBdEIsNkJBQXNCO1VBQXRCLHNCQUFzQjtFQUN0Qix5QkFBbUI7VUFBbkIsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0Usb0JBQWE7RUFBYixhQUFhO0VBQ2IsOEJBQW1CO0VBQW5CLDZCQUFtQjtVQUFuQixtQkFBbUI7RUFDbkIsZ0JBQWdCO0FBQ2xCOztBQUVBO0VBQ0Usb0JBQWE7RUFBYixhQUFhO0VBQ2IsNEJBQXNCO0VBQXRCLDZCQUFzQjtVQUF0QixzQkFBc0I7QUFDeEI7O0FBRUE7RUFDRSxvQkFBYTtFQUFiLGFBQWE7RUFDYiw0QkFBc0I7RUFBdEIsNkJBQXNCO1VBQXRCLHNCQUFzQjtFQUN0QixVQUFVO0VBQ1YsYUFBYTtFQUNiLG9DQUFvQztBQUN0Qzs7QUFFQTtFQUNFLG9CQUFhO0VBQWIsYUFBYTtFQUNiLDRCQUFzQjtFQUF0Qiw2QkFBc0I7VUFBdEIsc0JBQXNCO0VBQ3RCLDBCQUFvQjtVQUFwQixvQkFBb0I7QUFDdEI7O0FBRUE7RUFDRSxnQkFBZ0I7RUFDaEIsb0JBQWE7RUFBYixhQUFhO0VBQ2IsNEJBQXNCO0VBQXRCLDZCQUFzQjtVQUF0QixzQkFBc0I7RUFDdEIseUJBQW1CO1VBQW5CLG1CQUFtQjtFQUNuQix3QkFBdUI7VUFBdkIsdUJBQXVCO0FBQ3pCOztBQUVBO0VBQ0Usb0JBQWE7RUFBYixhQUFhO0VBQ2IsNEJBQXNCO0VBQXRCLDZCQUFzQjtVQUF0QixzQkFBc0I7RUFDdEIsVUFBVTtBQUNaOztBQUVBO0VBQ0Usb0JBQWE7RUFBYixhQUFhO0VBQ2IsNEJBQXNCO0VBQXRCLDZCQUFzQjtVQUF0QixzQkFBc0I7RUFDdEIseUJBQW1CO1VBQW5CLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLFdBQVc7QUFDYjs7QUFFQTtFQUNFLGtCQUFrQjtF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QXdCO1VBQXhCLHdCQUF3QjtBQUMxQjs7QUFDQTtFQUNFLFNBQVM7RUFDVCxVQUFVO0FBQ1o7O0FBQ0E7RUFDRSxnQ0FBd0I7VUFBeEIsd0JBQXdCO0FBQzFCOztBQUNBO0VBQ0UsU0FBUztFQUNULFVBQVU7QUFDWjs7QUFDQTtFQUNFLCtCQUF1QjtVQUF2Qix1QkFBdUI7QUFDekI7O0FBQ0E7RUFDRSxTQUFTO0VBQ1QsVUFBVTtBQUNaOztBQUNBO0VBQ0UsZ0NBQXdCO1VBQXhCLHdCQUF3QjtBQUMxQjs7QUFDQTtFQUNFLFNBQVM7RUFDVCxVQUFVO0FBQ1o7O0FBQ0E7RUFDRSxnQ0FBd0I7VUFBeEIsd0JBQXdCO0FBQzFCOztBQUNBO0VBQ0UsU0FBUztFQUNULFVBQVU7QUFDWjs7QUFDQTtFQUNFLGdDQUF3QjtVQUF4Qix3QkFBd0I7QUFDMUI7O0FBQ0E7RUFDRSxTQUFTO0VBQ1QsVUFBVTtBQUNaOztBQUNBO0VBQ0U7SUFDRSwrQkFBdUI7WUFBdkIsdUJBQXVCO0VBQ3pCO0VBQ0E7SUFDRSxpQ0FBeUI7WUFBekIseUJBQXlCO0VBQzNCO0FBQ0Y7O0FBUEE7RUFDRTtJQUNFLCtCQUF1QjtZQUF2Qix1QkFBdUI7RUFDekI7RUFDQTtJQUNFLGlDQUF5QjtZQUF6Qix5QkFBeUI7RUFDM0I7QUFDRiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3NlYWZvb2Qvc2VhZm9vZC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmhlYWQtYm94IHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuLndyYXBwZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBtYXJnaW4tdG9wOiAzMHB4O1xufVxuXG5mb3JtIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbn1cblxuLmZvcm0tY2FyZCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIHdpZHRoOiA0NSU7XG4gIHBhZGRpbmc6IDEwcHg7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYigyMDYsIDIwNCwgMjA0KTtcbn1cblxuLmZvcm0tY2FyZCAuZm9ybS1ib3gge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBhbGlnbi1pdGVtczogc3RyZXRjaDtcbn1cblxuLnJlc3VsdC1ib3gge1xuICBtYXJnaW4tdG9wOiAxNXB4O1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbn1cblxuLnF1ZXJ5LWJveCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIHdpZHRoOiA1NSU7XG59XG5cbm1hdC1jYXJkLWNvbnRlbnQge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG5tYXQtY2FyZC1jb250ZW50IHRhYmxlIHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbm1hdC1jYXJkLWNvbnRlbnQgLmVycm9yLWJveCB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgbWFyZ2luLXRvcDogMTVweDtcbiAgY29sb3I6IHJnYigxOTIsIDQsIDQpO1xufVxuXG5tYXQtY2FyZCB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYigyMDYsIDIwNCwgMjA0KTtcbiAgbWFyZ2luOiAxMHB4O1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xufVxuXG5tYXQtY2FyZCBtYXQtY2FyZC1hY3Rpb25zIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxubWF0LWNhcmQgbWF0LWNhcmQtYWN0aW9ucyBidXR0b24ge1xuICB3aWR0aDogNTAlO1xufVxuXG5tYXQtY2FyZCBtYXQtY2FyZC1hY3Rpb25zIC5jbGVhci1idG4ge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjM1LCAxMzksIDEzOSk7XG59XG5cbm1hdC1jYXJkIG1hdC1jYXJkLWFjdGlvbnMgLnF1ZXJ5LWJ0biB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYigxNzQsIDIxOSwgMTQ0KTtcbiAgd2lkdGg6IDUwJTtcbn1cblxuLnByb3Ytd3JhcHBlciB7XG4gIG1hcmdpbi10b3A6IDMwcHg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIHdpZHRoOiAxMDAlO1xuICAvKiBtYXJnaW46IDUwcHg7ICovXG59XG5cbi5wcm92LWZvcm0tYm94IHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgYWxpZ24taXRlbXM6IHN0cmV0Y2g7XG4gIHdpZHRoOiA3MCU7XG4gIHBhZGRpbmc6IDEwcHg7XG4gIG1hcmdpbjogMTVweCAxNXB4IDBweCAxNXB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjA2LCAyMDQsIDIwNCk7XG59XG5cbi5wcm92LWZvcm0tYm94IGZvcm0gPiAuc3VibWl0LWJ0biB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gIG1hcmdpbjogMTBweCAxMHB4IDRweCAxMHB4O1xufVxuXG4ucHJvdi1mb3JtLWJveCBmb3JtID4gLmNsZWFyLWJ0biB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYigyMzUsIDEzOSwgMTM5KTtcbiAgbWFyZ2luOiA0cHggMTBweCAxMHB4IDEwcHg7XG59XG5cbi5wcm92LXJlc3VsdC1ib3gge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBhbGlnbi1pdGVtczogc3RyZXRjaDtcbiAgYWxpZ24tY29udGVudDogY2VudGVyO1xuICB3aWR0aDogMTAwJTtcbn1cblxuLnByb3YtcmVzdWx0LWJveCAuc3Bpbm5lciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIG1hcmdpbjogNDBweDtcbn1cblxuLnByb3YtcmVzdWx0LWJveCAuZXJyb3ItYm94IHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuLnByb3YtcmVzdWx0LWJveCAuZXJyb3ItYm94IGgzIHtcbiAgY29sb3I6IHJnYigxOTIsIDQsIDQpO1xufVxuXG4ucHJvdi1yZXN1bHQtYm94IC5wcm92LXRhYmxlcy1ib3gge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBhbGlnbi1pdGVtczogc3RyZXRjaDtcbn1cblxuLnByb3YtcmVzdWx0LWJveCAucHJvdi10YWJsZXMtYm94IHRhYmxlIHtcbiAgd2lkdGg6IDEwMCU7XG4gIG1hcmdpbjogMTBweDtcbn1cblxuLyogR1JBUEggKi9cblxuLnBhZ2Uge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiA2MHZoO1xuICBvdmVyZmxvdy14OiBoaWRkZW47XG4gIG92ZXJmbG93LXk6IGhpZGRlbjtcbn1cblxuLnBhZ2UgLmdyYXBoIHtcbiAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG4gIHBhZGRpbmc6IDIwcHggNTBweDtcbn1cblxuLnBhZ2UgLmdyYXBoIC5ub2RlLWJveCB7XG4gIHBvaW50ZXItZXZlbnRzOiBhbGw7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuLnBhZ2UgLmdyYXBoIC5ub2RlLWJveDpob3ZlciB7XG4gIG9wYWNpdHk6IDAuNTtcbn1cblxuLm5vZGUtaW5mbyB7XG4gIHdpZHRoOiAxMDAlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBhbGlnbi1pdGVtczogc3RyZXRjaDtcbn1cblxuLm5vZGUtaW5mbyB0YWJsZSB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4vKiBTUElOTkVSICovXG5cbi5sZHMtcm9sbGVyIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHdpZHRoOiA4MHB4O1xuICBoZWlnaHQ6IDgwcHg7XG59XG4ubGRzLXJvbGxlciBkaXYge1xuICBhbmltYXRpb246IGxkcy1yb2xsZXIgMS4ycyBjdWJpYy1iZXppZXIoMC41LCAwLCAwLjUsIDEpIGluZmluaXRlO1xuICB0cmFuc2Zvcm0tb3JpZ2luOiA0MHB4IDQwcHg7XG59XG4ubGRzLXJvbGxlciBkaXY6YWZ0ZXIge1xuICBjb250ZW50OiBcIiBcIjtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgd2lkdGg6IDdweDtcbiAgaGVpZ2h0OiA3cHg7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgYmFja2dyb3VuZDogYmxhY2s7XG4gIG1hcmdpbjogLTRweCAwIDAgLTRweDtcbn1cbi5sZHMtcm9sbGVyIGRpdjpudGgtY2hpbGQoMSkge1xuICBhbmltYXRpb24tZGVsYXk6IC0wLjAzNnM7XG59XG4ubGRzLXJvbGxlciBkaXY6bnRoLWNoaWxkKDEpOmFmdGVyIHtcbiAgdG9wOiA2M3B4O1xuICBsZWZ0OiA2M3B4O1xufVxuLmxkcy1yb2xsZXIgZGl2Om50aC1jaGlsZCgyKSB7XG4gIGFuaW1hdGlvbi1kZWxheTogLTAuMDcycztcbn1cbi5sZHMtcm9sbGVyIGRpdjpudGgtY2hpbGQoMik6YWZ0ZXIge1xuICB0b3A6IDY4cHg7XG4gIGxlZnQ6IDU2cHg7XG59XG4ubGRzLXJvbGxlciBkaXY6bnRoLWNoaWxkKDMpIHtcbiAgYW5pbWF0aW9uLWRlbGF5OiAtMC4xMDhzO1xufVxuLmxkcy1yb2xsZXIgZGl2Om50aC1jaGlsZCgzKTphZnRlciB7XG4gIHRvcDogNzFweDtcbiAgbGVmdDogNDhweDtcbn1cbi5sZHMtcm9sbGVyIGRpdjpudGgtY2hpbGQoNCkge1xuICBhbmltYXRpb24tZGVsYXk6IC0wLjE0NHM7XG59XG4ubGRzLXJvbGxlciBkaXY6bnRoLWNoaWxkKDQpOmFmdGVyIHtcbiAgdG9wOiA3MnB4O1xuICBsZWZ0OiA0MHB4O1xufVxuLmxkcy1yb2xsZXIgZGl2Om50aC1jaGlsZCg1KSB7XG4gIGFuaW1hdGlvbi1kZWxheTogLTAuMThzO1xufVxuLmxkcy1yb2xsZXIgZGl2Om50aC1jaGlsZCg1KTphZnRlciB7XG4gIHRvcDogNzFweDtcbiAgbGVmdDogMzJweDtcbn1cbi5sZHMtcm9sbGVyIGRpdjpudGgtY2hpbGQoNikge1xuICBhbmltYXRpb24tZGVsYXk6IC0wLjIxNnM7XG59XG4ubGRzLXJvbGxlciBkaXY6bnRoLWNoaWxkKDYpOmFmdGVyIHtcbiAgdG9wOiA2OHB4O1xuICBsZWZ0OiAyNHB4O1xufVxuLmxkcy1yb2xsZXIgZGl2Om50aC1jaGlsZCg3KSB7XG4gIGFuaW1hdGlvbi1kZWxheTogLTAuMjUycztcbn1cbi5sZHMtcm9sbGVyIGRpdjpudGgtY2hpbGQoNyk6YWZ0ZXIge1xuICB0b3A6IDYzcHg7XG4gIGxlZnQ6IDE3cHg7XG59XG4ubGRzLXJvbGxlciBkaXY6bnRoLWNoaWxkKDgpIHtcbiAgYW5pbWF0aW9uLWRlbGF5OiAtMC4yODhzO1xufVxuLmxkcy1yb2xsZXIgZGl2Om50aC1jaGlsZCg4KTphZnRlciB7XG4gIHRvcDogNTZweDtcbiAgbGVmdDogMTJweDtcbn1cbkBrZXlmcmFtZXMgbGRzLXJvbGxlciB7XG4gIDAlIHtcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgwZGVnKTtcbiAgfVxuICAxMDAlIHtcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpO1xuICB9XG59XG4iXX0= */\"","import {COMMA, ENTER} from '@angular/cdk/keycodes';\nimport { Component, OnInit, Input } from '@angular/core';\nimport { FormBuilder, FormGroup, Validator, FormControl, Validators } from '@angular/forms';\nimport { ApiService } from 'src/app/api.service';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport Fish from 'src/app/models/Fish';\nimport FishPackage from 'src/app/models/FishPackage';\nimport FishShipment from 'src/app/models/FishShipment';\nimport PackageTransportation from 'src/app/models/PackageTransportation';\nimport PackageSelling from 'src/app/models/PackageSelling';\nimport InventoryEntry from 'src/app/models/InventoryEntry';\nimport SeafoodOccurrence from 'src/app/models/SeafoodOccurrence';\nimport * as shape from 'd3-shape';\nimport { Node, Edge, Layout, ClusterNode } from '@swimlane/ngx-graph';\nimport { Subject } from 'rxjs';\n\n@Component({\n  selector: 'app-seafood',\n  templateUrl: './seafood.component.html',\n  styleUrls: ['./seafood.component.css']\n})\nexport class SeafoodComponent implements OnInit {\n  title = 'Seafood Supply Chain';\n\n  fishForm: FormGroup;\n  packageForm: FormGroup;\n  shipmentForm: FormGroup;\n  inventoryEntryForm: FormGroup;\n  sellingForm: FormGroup;\n  transportationForm: FormGroup;\n  provenanceForm: FormGroup;\n\n  readonly separatorKeysCodes: number[] = [ENTER, COMMA];\n  // idsForPackage: string[] = [];\n  // idsForShipment: string[] = [];\n  selectable = true;\n  removable = true;\n  addOnBlur = true;\n\n  performing = false;\n  result: any = null;\n  prevIndex = 0;\n\n  fishes: Fish[] = [];\n  fishColumns = ['fishId', 'location', 'fishermanName'];\n  fishPerforming = false;\n  fishError = '';\n  packages: FishPackage[] = [];\n  packageColumns = ['fishIds', 'packageId', 'processingFacilityName'];\n  packagePerforming = false;\n  packageError = '';\n  shipments: FishShipment[] = [];\n  shipmentColumns = ['fishIds', 'toLocation', 'shipmentCompanyName'];\n  shipmentPerforming = false;\n  shipmentError = '';\n  transportations: PackageTransportation[] = [];\n  transportationColumns = ['packageId', 'toLocation', 'distributorName'];\n  transportationPerforming = false;\n  transportationError = '';\n  sales: PackageSelling[] = [];\n  saleColumns = ['packageId'];\n  salePerforming = false;\n  saleError = '';\n  entries: InventoryEntry[] = [];\n  entryColumns = ['packageId', 'retailerName'];\n  entryPerforming = false;\n  entryError = '';\n\n\n  provenanceFishes: SeafoodOccurrence<Fish>[] = [];\n  fishProvColumns = ['isoTimestamp', 'fishId', 'location', 'fishermanName'];\n  fishesProv = [];\n\n  provenanceShipments: SeafoodOccurrence<FishShipment>[] = [];\n  shipmentProvColumns = ['isoTimestamp', 'fishIds', 'toLocation', 'shipmentCompanyName'];\n  shipmentsProv = [];\n\n  provenancePackage: SeafoodOccurrence<FishPackage> = null;\n  packageProvColumns = ['isoTimestamp', 'fishIds', 'packageId', 'processingFacilityName'];\n  packagesProv = [];\n\n  provenanceTransportation: SeafoodOccurrence<PackageTransportation> = null;\n  transportationProvColumns = ['isoTimestamp', 'packageId', 'toLocation', 'distributorName'];\n  transportationsProv = [];\n\n  provenanceSelling: SeafoodOccurrence<PackageSelling> = null;\n  saleProvColumns = ['isoTimestamp', 'packageId'];\n  salesProv = [];\n\n  provenanceEntry: SeafoodOccurrence<InventoryEntry> = null;\n  entryProvColumns = ['isoTimestamp', 'packageId', 'retailerName'];\n  entriesProv = [];\n\n  error = '';\n\n  curve = shape.curveCardinal;\n  // size = [1000, 1000];\n  links: Edge[] = [];\n  nodes: Node[] = [];\n  clusters: ClusterNode[] = [];\n  update$: Subject<boolean> = new Subject();\n  center$: Subject<boolean> = new Subject();\n  zoomToFit$: Subject<boolean> = new Subject();\n  showInfo = '';\n\n  constructor(private apiService: ApiService, private formBuilder: FormBuilder) {\n    this.fishForm = this.formBuilder.group({\n      fishId: new FormControl('', Validators.required),\n      location: new FormControl('', Validators.required),\n      fishermanName: new FormControl('', Validators.required),\n    });\n    this.packageForm = this.formBuilder.group({\n      fishIds: this.formBuilder.array([]),\n      packageId: new FormControl('', Validators.required),\n      processingFacilityName: new FormControl('', Validators.required),\n    });\n\n    this.shipmentForm = this.formBuilder.group({\n      fishIds: this.formBuilder.array([]),\n      toLocation: new FormControl('', Validators.required),\n      shipmentCompanyName: new FormControl('', Validators.required),\n    });\n\n    this.transportationForm = this.formBuilder.group({\n      packageId: new FormControl('', Validators.required),\n      toLocation: new FormControl('', Validators.required),\n      distributorName: new FormControl('', Validators.required),\n    });\n    this.inventoryEntryForm = this.formBuilder.group({\n      packageId: new FormControl('', Validators.required),\n      retailerName: new FormControl('', Validators.required),\n    });\n    this.sellingForm = this.formBuilder.group({\n      packageId: new FormControl('', Validators.required),\n    });\n    this.provenanceForm = this.formBuilder.group({\n      packageId: new FormControl('', Validators.required),\n    });\n  }\n\n  ngOnInit() {\n    this.getFishes();\n  }\n\n  onRegisterFish(fish: any) {\n    this.performing = true;\n    if (this.fishForm.valid) {\n      this.apiService.registerCapturedFish(fish)\n      .subscribe(\n        res => {\n          this.result = res;\n          this.performing = false;\n          this.fishForm.reset();\n          this.getFishes();\n        },\n        err => {\n          this.result = err.message;\n          this.performing = false;\n      });\n    } else {\n      this.result = 'Invalid form!';\n      this.performing = false;\n    }\n  }\n\n  onRegisterPackage(packageFish: any) {\n    this.performing = true;\n    if (this.packageForm.valid && packageFish.fishIds.length > 0) {\n      this.apiService.registerPackage(packageFish)\n        .subscribe(\n          res => {\n            this.result = res;\n            this.performing = false;\n            this.packageForm.reset();\n            this.getPackages();\n          },\n          err => {\n            this.result = err.message;\n            this.performing = false;\n        });\n    } else {\n      this.result = 'Invalid form!';\n      this.performing = false;\n    }\n  }\n\n  onRegisterShipment(shipment: any) {\n    console.log(shipment);\n    this.performing = true;\n    if (this.shipmentForm.valid && shipment.fishIds.length > 0) {\n      this.apiService.registerShipment(shipment)\n      .subscribe(\n        res => {\n          this.result = res;\n          this.performing = false;\n          this.shipmentForm.reset();\n          this.getShipments();\n        },\n        err => {\n          this.result = err.message;\n          this.performing = false;\n      });\n    } else {\n      this.result = 'Invalid form!';\n      this.performing = false;\n    }\n  }\n\n  onRegisterTransportation(transportation: any) {\n    this.performing = true;\n    if (this.transportationForm.valid) {\n      this.apiService.registerTransportation(transportation)\n      .subscribe(\n        res => {\n          this.result = res;\n          this.performing = false;\n          this.transportationForm.reset();\n          this.getTransportations();\n        },\n        err => {\n          this.result = err.message;\n          this.performing = false;\n      });\n    } else {\n      this.result = 'Invalid form!';\n      this.performing = false;\n    }\n  }\n\n  onRegisterInInventory(entry: any) {\n    this.performing = true;\n    if (this.inventoryEntryForm.valid) {\n      this.apiService.registerInInventory(entry)\n      .subscribe(\n        res => {\n          this.result = res;\n          this.performing = false;\n          this.inventoryEntryForm.reset();\n          this.getEntries();\n        },\n        err => {\n          this.result = err.message;\n          this.performing = false;\n      });\n    } else {\n      this.result = 'Invalid form!';\n      this.performing = false;\n    }\n  }\n\n  onRegisterSelling(sale: any) {\n    this.performing = true;\n    if (this.sellingForm.valid) {\n      this.apiService.registerSelling(sale)\n      .subscribe(\n        res => {\n          this.result = res;\n          this.performing = false;\n          this.sellingForm.reset();\n          this.getSales();\n        },\n        err => {\n          this.result = err.message;\n          this.performing = false;\n      });\n    } else {\n      this.result = 'Invalid form!';\n      this.performing = false;\n    }\n  }\n\n  getFishes() {\n    this.fishPerforming = true;\n    this.apiService.getAllRegisteredFishes()\n      .subscribe(\n        res => {\n          this.fishes = res;\n          this.fishPerforming = false;\n        },\n        err => {\n          this.fishError = err.message;\n          this.fishPerforming = false;\n        }\n      );\n  }\n\n  clearFishes() {\n    this.fishes = [];\n  }\n\n  getPackages() {\n    this.packagePerforming = true;\n    this.apiService.getAllRegisteredPackages()\n      .subscribe(\n        res => {\n          this.packages = res;\n          this.packagePerforming = false;\n        },\n        err => {\n          this.packageError = err.message;\n          this.packagePerforming = false;\n        }\n      );\n  }\n\n  clearPackages() {\n    this.packages = [];\n  }\n\n  getShipments() {\n    this.shipmentPerforming = true;\n    this.apiService.getAllRegisteredShipments()\n      .subscribe(\n        res => {\n          this.shipments = res;\n          this.shipmentPerforming = false;\n        },\n        err => {\n          this.shipmentError = err.message;\n          this.shipmentPerforming = false;\n        }\n      );\n  }\n\n  clearShipments() {\n    this.shipments = [];\n  }\n\n  getTransportations() {\n    this.transportationPerforming = true;\n    this.apiService.getAllRegisteredTransportations()\n      .subscribe(\n        res => {\n          this.transportations = res;\n          this.transportationPerforming = false;\n        },\n        err => {\n          this.transportationError = err.message;\n          this.transportationPerforming = false;\n        }\n      );\n  }\n\n  clearTransportations() {\n    this.transportations = [];\n  }\n\n  getSales() {\n    this.salePerforming = true;\n    const obs = this.apiService.getAllSoldPackages();\n\n    obs.subscribe(\n        res => {\n          this.sales = res;\n          this.salePerforming = false;\n        },\n        err => {\n          this.saleError = err.message;\n          this.salePerforming = false;\n        }\n      );\n  }\n\n  clearSales() {\n    this.sales = [];\n  }\n\n  getEntries() {\n    this.entryPerforming = true;\n    this.apiService.getAllPackagesRegisteredInInventories()\n      .subscribe(\n        res => {\n          this.entries = res;\n          this.entryPerforming = false;\n        },\n        err => {\n          this.entryError = err.message;\n          this.entryPerforming = false;\n        }\n      );\n  }\n\n  clearEntries() {\n    this.entries = [];\n  }\n\n  retrieveProvenance(provenanceForm) {\n    this.clearGraph();\n    const id = provenanceForm.packageId;\n    this.performing = true;\n    if (this.provenanceForm.valid) {\n      this.apiService.retrieveProvenance(id)\n      .subscribe(\n        res => {\n          if (res.packagingOccurrence == null) {\n            this.error = 'Package not found';\n          } else {\n            this.provenanceFishes = res.fishCatchingOccurrences ? res.fishCatchingOccurrences : [];\n            for (const fish of this.provenanceFishes) {\n              this.nodes = [\n                ...this.nodes,\n                {\n                  id: fish.occurrence.fishId,\n                  label: 'Fish Captured',\n                  data: {\n                    isoTimestamp: fish.isoTimestamp,\n                    location: fish.occurrence.location,\n                    fishermanName: fish.occurrence.fishermanName,\n                    color: '#3533ff',\n                    type: 'fish',\n                  }\n                }\n              ];\n            }\n\n            this.provenanceShipments = res.fishShipmentOccurrences ? res.fishShipmentOccurrences : [];\n            for (const shipment of this.provenanceShipments) {\n              const shipmentNodeId = 'shipment-' + shipment.occurrence.fishIds.toString();\n              this.nodes = [\n                ...this.nodes,\n                {\n                  id: shipmentNodeId,\n                  label: 'Fishes Shipped',\n                  data: {\n                    isoTimestamp: shipment.isoTimestamp,\n                    toLocation: shipment.occurrence.toLocation,\n                    shipmentCompanyName: shipment.occurrence.shipmentCompanyName,\n                    color: '#33fbff',\n                    type: 'shipment',\n                  }\n                }\n              ];\n\n              for (const fishId of shipment.occurrence.fishIds) {\n                const check = this.nodes.filter(value => value.id === fishId);\n                if (check.length !== 0) {\n                  this.links = [\n                    ...this.links,\n                    {\n                      label: 'shipping',\n                      source: fishId,\n                      target: shipmentNodeId,\n                      data: {\n                        linkText: 'fish shipped',\n                      }\n                    }\n                  ];\n                }\n              }\n            }\n\n            this.provenancePackage = res.packagingOccurrence;\n            if (this.provenancePackage != null) {\n              const packageNodeId = 'package-' + this.provenancePackage.occurrence.packageId;\n              this.nodes = [\n                ...this.nodes,\n                {\n                  id: packageNodeId,\n                  label: 'Package ' + this.provenancePackage.occurrence.packageId + ' Registered',\n                  data: {\n                    isoTimestamp: this.provenancePackage.isoTimestamp,\n                    fishIds: this.provenancePackage.occurrence.fishIds,\n                    processingFacilityName: this.provenancePackage.occurrence.processingFacilityName,\n                    color: '#ff5733',\n                    type: 'package',\n                  }\n                }\n              ];\n\n              for (const ship of this.provenanceShipments) {\n                this.links = [\n                  ...this.links,\n                  {\n                    label: 'registering',\n                    source: 'shipment-' + ship.occurrence.fishIds.toString(),\n                    target: packageNodeId,\n                    data: {\n                      linkText: 'package registration',\n                    }\n                  }\n                ];\n              }\n            }\n\n            this.provenanceTransportation = res.transportationOccurrence;\n            if (this.provenanceTransportation != null) {\n              const transportationNodeId = 'transport-' + this.provenanceTransportation.occurrence.packageId;\n              this.nodes = [\n                ...this.nodes,\n                {\n                  id: transportationNodeId,\n                  label: 'Package Transported',\n                  data: {\n                    isoTimestamp: this.provenanceTransportation.isoTimestamp,\n                    toLocation: this.provenanceTransportation.occurrence.toLocation,\n                    distributorName: this.provenanceTransportation.occurrence.distributorName,\n                    color: '#35ff33',\n                    type: 'transportation',\n                  }\n                }\n              ];\n\n              this.links = [\n                ...this.links,\n                {\n                  label: 'transporting',\n                  source: 'package-' + this.provenanceTransportation.occurrence.packageId,\n                  target: transportationNodeId,\n                  data: {\n                    linkText: 'package transporting',\n                  }\n                }\n              ];\n            }\n\n            this.provenanceEntry = res.inventoryOccurrence;\n            if (this.provenanceEntry != null) {\n              const entryNodeId = 'entry-' + this.provenanceEntry.occurrence.packageId;\n              this.nodes = [\n                ...this.nodes,\n                {\n                  id: entryNodeId,\n                  label: 'Package Registered In Inventory',\n                  data: {\n                    isoTimestamp: this.provenanceEntry.isoTimestamp,\n                    retailerName: this.provenanceEntry.occurrence.retailerName,\n                    color: '#ff33de',\n                    type: 'inventory',\n                  }\n                }\n              ];\n\n              this.links = [\n                ...this.links,\n                {\n                  label: `registering`,\n                  source: 'transport-' + this.provenanceTransportation.occurrence.packageId,\n                  target: entryNodeId,\n                  data: {\n                    linkText: `package's inventory registration`\n                  }\n                }\n              ];\n            }\n\n            this.provenanceSelling = res.sellingOccurrence;\n            if (this.provenanceSelling != null) {\n              const sellingNodeId = 'selling-' + this.provenanceSelling.occurrence.packageId;\n              this.nodes = [\n                ...this.nodes,\n                {\n                  id: sellingNodeId,\n                  label: 'Package Sold',\n                  data: {\n                    isoTimestamp: this.provenanceSelling.isoTimestamp,\n                    color: '#f1ff33',\n                    type: 'selling',\n                  }\n                }\n              ];\n\n              this.links = [\n                ...this.links,\n                {\n                  label: 'selling',\n                  source: 'entry-' + this.provenanceEntry.occurrence.packageId,\n                  target: sellingNodeId,\n                  data: {\n                    linkText: 'package selling',\n                  }\n                }\n              ];\n            }\n          }\n          this.performing = false;\n          console.log(this.links);\n        },\n        err => {\n          this.error = err.message;\n          this.performing = false;\n        }\n      );\n    } else {\n      this.error = 'Missing package identifier!';\n      this.performing = false;\n    }\n  }\n\n  clearGraph() {\n    this.nodes = [];\n    this.links = [];\n    this.clusters = [];\n    this.showInfo = '';\n  }\n\n  clearProvenance() {\n    this.provenanceFishes = [];\n    this.fishesProv = [];\n    this.provenanceShipments = [];\n    this.shipmentsProv = [];\n    this.provenancePackage = null;\n    this.packagesProv = [];\n    this.provenanceTransportation = null;\n    this.transportationsProv = [];\n    this.provenanceSelling = null;\n    this.salesProv = [];\n    this.provenanceEntry = null;\n    this.entriesProv = [];\n    this.clearGraph();\n  }\n\n  removeIdFromPackage(id: string) {\n    const controller = this.packageForm.controls.fishIds;\n    const index = controller.value.indexOf(id);\n    if (index >= 0) {\n      controller.value.splice(index, 1);\n    }\n    controller.markAsDirty();\n  }\n\n  addIdInPackage(event: MatChipInputEvent): void {\n    const controller = this.packageForm.controls.fishIds;\n    const input = event.input;\n    const value = event.value;\n\n    // Add a new id\n    if ((value || '').trim()) {\n      controller.value.push(value);\n\n      controller.markAsDirty();\n      // Reset the input value\n      input.value = '';\n    }\n  }\n\n  removeIdFromShipment(id: string) {\n    const controller = this.shipmentForm.controls.fishIds;\n    const index = controller.value.indexOf(id);\n    if (index >= 0) {\n      controller.value.splice(index, 1);\n    }\n    controller.markAsDirty();\n  }\n\n  addIdInShipment(event: MatChipInputEvent): void {\n    const controller = this.shipmentForm.controls.fishIds;\n    const input = event.input;\n    const value = event.value;\n\n    // Add a new id\n    if ((value || '').trim()) {\n      controller.value.push(value);\n\n      controller.markAsDirty();\n      // Reset the input value\n      input.value = '';\n    }\n  }\n\n  onTabClick(event) {\n    if (event.index !== this.prevIndex) {\n      this.result = null;\n      this.error = '';\n      this.performing = false;\n      this.prevIndex = event.index;\n      this.fishError = this.packageError = this.shipmentError = this.transportationError = this.entryError = this.saleError = '';\n\n      switch (event.index) {\n        case 0:\n          this.getFishes();\n          break;\n        case 1:\n          this.getShipments();\n          break;\n        case 2:\n          this.getPackages();\n          break;\n        case 3:\n          this.getTransportations();\n          break;\n        case 4:\n          this.getEntries();\n          break;\n        case 5:\n          this.getSales();\n          break;\n        default:\n          break;\n      }\n\n    }\n  }\n\n  onNodeClicked(event) {\n    const id: string = event.target.id;\n    const node = this.nodes.find(v => v.id === id);\n    this.showInfo = node.data.type;\n\n    switch (this.showInfo) {\n      case 'fish':\n        this.fishesProv = [this.provenanceFishes.find(v => v.occurrence.fishId === id)];\n        break;\n      case 'shipment':\n        this.shipmentsProv = [this.provenanceShipments.find(v => v.occurrence.fishIds.toString() === id.replace('shipment-', ''))];\n        break;\n      case 'package':\n        this.packagesProv = [this.provenancePackage];\n        break;\n      case 'transportation':\n        this.transportationsProv = [this.provenanceTransportation];\n        break;\n      case 'inventory':\n        this.entriesProv = [this.provenanceEntry];\n        break;\n      case 'selling':\n        this.salesProv = [this.provenanceSelling];\n        break;\n    }\n  }\n\n  onEdgeClicked(event) {}\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:8080'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}